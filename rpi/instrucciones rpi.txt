1. configurar wifi:
	modificar archivos:
		1. interfaces (/etc/network/interfaces)
		2. wpa_supplicant.conf (/etc/wpa_supplicant/wpa_supplicant.conf) (configuracion del wifi)
			cambiar identity y password (para password usar "echo -n ponger_clave_aqui | iconv -t utf16le | openssl md4" en el Terminal de la rpi) (ver link https://unix.stackexchange.com/questions/278946/hiding-passwords-in-wpa-supplicant-conf-with-wpa-eap-and-mschap-v2)
2. configurar rc.local (/etc/rc.local) para que corra el codigo cuando se prenda la rpi
3. obtener librerias:
	cd ~/Documents/
	sudo apt-get install automake libtool
	wget http://www.airspayce.com/mikem/bcm2835/bcm2835-1.50.tar.gz
	tar zxvf bcm2835-1.50.tar.gz
	cd bcm2835-1.50
	autoreconf -vfi
	./configure
	make
	sudo make check
	sudo make install
4. clonar librerias:
	sudo apt-get install git build-essential python-dev
	cd ~/Documents/
	git clone https://github.com/fabiovix/py-ads1256.git
	cd py-ads1256
5. (si se quiere medicion diferencial) cambiar ads1256_test.c
	por el de esta libreria (se cambio ADS1256_StartScan(0) por ADS1256_StartScan(1) en la linea 972 de ads1256_test.c
6. compilar ads1256_test.c:
	sudo python setup.py install
7. ya se puede probar con python read_volts_example.py
